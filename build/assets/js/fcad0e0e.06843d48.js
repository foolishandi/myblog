"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[6912],{3905:(t,e,n)=>{n.d(e,{Zo:()=>s,kt:()=>f});var i=n(67294);function r(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function c(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(t);e&&(i=i.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,i)}return n}function o(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?c(Object(n),!0).forEach((function(e){r(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):c(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}function m(t,e){if(null==t)return{};var n,i,r=function(t,e){if(null==t)return{};var n,i,r={},c=Object.keys(t);for(i=0;i<c.length;i++)n=c[i],e.indexOf(n)>=0||(r[n]=t[n]);return r}(t,e);if(Object.getOwnPropertySymbols){var c=Object.getOwnPropertySymbols(t);for(i=0;i<c.length;i++)n=c[i],e.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(t,n)&&(r[n]=t[n])}return r}var l=i.createContext({}),a=function(t){var e=i.useContext(l),n=e;return t&&(n="function"==typeof t?t(e):o(o({},e),t)),n},s=function(t){var e=a(t.components);return i.createElement(l.Provider,{value:e},t.children)},u="mdxType",d={inlineCode:"code",wrapper:function(t){var e=t.children;return i.createElement(i.Fragment,{},e)}},p=i.forwardRef((function(t,e){var n=t.components,r=t.mdxType,c=t.originalType,l=t.parentName,s=m(t,["components","mdxType","originalType","parentName"]),u=a(n),p=r,f=u["".concat(l,".").concat(p)]||u[p]||d[p]||c;return n?i.createElement(f,o(o({ref:e},s),{},{components:n})):i.createElement(f,o({ref:e},s))}));function f(t,e){var n=arguments,r=e&&e.mdxType;if("string"==typeof t||r){var c=n.length,o=new Array(c);o[0]=p;var m={};for(var l in e)hasOwnProperty.call(e,l)&&(m[l]=e[l]);m.originalType=t,m[u]="string"==typeof t?t:r,o[1]=m;for(var a=2;a<c;a++)o[a]=n[a];return i.createElement.apply(null,o)}return i.createElement.apply(null,n)}p.displayName="MDXCreateElement"},68908:(t,e,n)=>{n.r(e),n.d(e,{assets:()=>l,contentTitle:()=>o,default:()=>u,frontMatter:()=>c,metadata:()=>m,toc:()=>a});var i=n(87462),r=(n(67294),n(3905));const c={},o=void 0,m={unversionedId:"\u670d\u52a1\u5668\u7aef/c++/c++/time",id:"\u670d\u52a1\u5668\u7aef/c++/c++/time",title:"time",description:"\u65f6\u95f4\u65e5\u671f\u76f8\u5173",source:"@site/docs/\u670d\u52a1\u5668\u7aef/c++/c++/time.md",sourceDirName:"\u670d\u52a1\u5668\u7aef/c++/c++",slug:"/\u670d\u52a1\u5668\u7aef/c++/c++/time",permalink:"/docs/next/\u670d\u52a1\u5668\u7aef/c++/c++/time",draft:!1,editUrl:"https://github.com/foolishandi/myblog/tree/main/docs/\u670d\u52a1\u5668\u7aef/c++/c++/time.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"string",permalink:"/docs/next/\u670d\u52a1\u5668\u7aef/c++/c++/string"},next:{title:"\u57fa\u7840",permalink:"/docs/next/\u670d\u52a1\u5668\u7aef/c++/c++/\u5b57\u7b26\u4e32\u5904\u7406/\u57fa\u7840"}},l={},a=[{value:"\u4e3b\u8981\u77e5\u8bc6\u70b9",id:"\u4e3b\u8981\u77e5\u8bc6\u70b9",level:2},{value:"\u5e38\u7528\u51fd\u6570",id:"\u5e38\u7528\u51fd\u6570",level:2}],s={toc:a};function u(t){let{components:e,...n}=t;return(0,r.kt)("wrapper",(0,i.Z)({},s,n,{components:e,mdxType:"MDXLayout"}),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://blog.csdn.net/Rita_2017/article/details/124015352?ops_request_misc=&request_id=&biz_id=102&utm_term=c++%20%E6%97%A5%E6%9C%9F&utm_medium=distribute.pc_search_result.none-task-blog-2~blog~sobaiduweb~default-1-124015352.268%5Ev1%5Ekoosearch&spm=1018.2226.3001.4450"},"\u65f6\u95f4\u65e5\u671f\u76f8\u5173")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"\u4e24\u4e2a\u7c7b\u578b\uff1a\ntime_t\uff1a\u8868\u793a\u8ddd\u79bb UTC \u65f6\u95f4 1970-01-01 00:00:00 \u7684\u79d2\u6570\u3002\u4e5f\u53eb\u505a\u65e5\u5386\u65f6\uff0c\u7c7b\u578b\u662f  long\nclock_t: \u53ea\u7528\u4e8e\u7a0b\u5e8f\u8ba1\u65f6\uff0c\u8c8c\u4f3c\u5176\u4ed6\u7684\u6ca1\u5b83\u4ec0\u4e48\u4e8b\u3002\nstruct tm\uff1a\u901a\u5e38\u7528\u4e8e\u5b58\u50a8\u672c\u5730\u65f6\u3002\n")),(0,r.kt)("h2",{id:"\u4e3b\u8981\u77e5\u8bc6\u70b9"},"\u4e3b\u8981\u77e5\u8bc6\u70b9"),(0,r.kt)("p",null,"1.Coordinated Universal Time(UTC)\uff1a"),(0,r.kt)("p",null,"\u534f\u8c03\u4e16\u754c\u65f6\uff0c\u53c8\u79f0\u4e16\u754c\u6807\u51c6\u65f6\u95f4\uff0c\u4e5f\u5373\u683c\u6797\u5a01\u6cbb\u6807\u51c6\u65f6\u95f4(Greenwich Mean Time,GMT)\uff0c\u4e2d\u56fd\u5185\u5730\u7684\u65f6\u95f4\u4e0eUTC\u5f97\u65f6\u5dee\u4e3a+8\uff0c\u4e5f\u5373UTC+8\uff0c\u7f8e\u56fd\u4e3aUTC-5\u3002"),(0,r.kt)("p",null,"2.Calendar Time\uff1a"),(0,r.kt)("p",null,"\u65e5\u5386\u65f6\u95f4\uff0c\u662f\u7528\u201c\u4ece\u4e00\u4e2a\u6807\u51c6\u65f6\u95f4\u70b9\u5230\u6b64\u65f6\u7684\u65f6\u95f4\u7ecf\u8fc7\u7684\u79d2\u6570\u201d\u6765\u8868\u793a\u7684\u65f6\u95f4\u3002\u6807\u51c6\u65f6\u95f4\u70b9\u5bf9\u4e0d\u540c\u7f16\u8bd1\u5668\u53ef\u80fd\u4f1a\u4e0d\u540c\uff0c\u4f46\u5bf9\u4e00\u4e2a\u7f16\u8bd1\u7cfb\u7edf\u6765\u8bf4\uff0c\u6807\u51c6\u65f6\u95f4\u662f\u4e0d\u53d8\u7684\u3002"),(0,r.kt)("p",null,"3.epoch\uff1a\u65f6\u95f4\u70b9\u3002"),(0,r.kt)("p",null,"\u5728\u6807\u51c6c/c++\u4e2d\u662f\u4e00\u4e2a\u6574\u6570\uff0c\u7528\u6b64\u65f6\u7684\u65f6\u95f4\u548c\u6807\u51c6\u65f6\u95f4\u70b9\u76f8\u5dee\u7684\u79d2\u6570\uff08\u5373\u65e5\u5386\u65f6\u95f4\uff09\u6765\u8868\u793a"),(0,r.kt)("p",null,"4.clock tick\uff1a"),(0,r.kt)("p",null,"\u65f6\u949f\u8ba1\u65f6\u5355\u5143\uff08\u800c\u4e0d\u53eb\u505a\u65f6\u949f\u6ef4\u7b54\u6b21\u6570\uff09\uff0c\u4e00\u4e2a\u65f6\u949f\u8ba1\u65f6\u5355\u5143\u7684\u65f6\u95f4\u957f\u77ed\u662f\u7531cpu\u63a7\u5236\u7684\uff0c\u4e00\u4e2aclock tick\u4e0d\u662fcpu\u7684\u4e00\u4e2a\u65f6\u949f\u5468\u671f\uff0c\u800c\u662fc/c++\u7684\u4e00\u4e2a\u57fa\u672c\u8ba1\u65f6\u5355\u4f4d\u3002"),(0,r.kt)("h2",{id:"\u5e38\u7528\u51fd\u6570"},"\u5e38\u7528\u51fd\u6570"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-c++"},'clock:        \u83b7\u53d6\u7a0b\u5e8f\u5f00\u59cb\u6267\u884c\u540e\u5360\u7528\u7684\u5904\u7406\u5668\u65f6\u95f4\uff0c\u8fd4\u56de\u503cclock_t\u3002\n// \u51fd\u6570\u539f\u578b: clock_t clcok()\n// \u51fd\u6570\u529f\u80fd: \u83b7\u53d6\u7a0b\u5e8f\u5f00\u59cb\u6267\u884c\u540e\u5360\u7528\u7684\u5904\u7406\u5668\u65f6\u95f4\n// \u51fd\u6570\u8fd4\u56de: \u4e00\u822c \u8fd4\u56de\u503c/CLOCK_PER_SEC \u6765\u5df2\u79d2\u6765\u8868\u793a\u65f6\u95f4\n\ntime\uff1a       \u83b7\u53d6\u5f53\u524d\u7cfb\u7edf\u65f6\u95f4\uff08UTC\u65f6\u95f4\uff09\u7684time_t\u503c\u3002\n// \u51fd\u6570\u539f\u578b: time_t time(time_t *timer)\n// \u51fd\u6570\u529f\u80fd: \u5f97\u5230\u673a\u5668\u7684\u65e5\u5386\u65f6\u95f4\u6216\u8005\u8bbe\u7f6e\u65e5\u5386\u65f6\u95f4\n// \u51fd\u6570\u8fd4\u56de: \u673a\u5668\u65e5\u5386\u65f6\u95f4\n// \u53c2\u6570\u8bf4\u660e: timer=NULL\u65f6\u5f97\u5230\u673a\u5668\u65e5\u5386\u65f6\u95f4\uff0ctimer=\u65f6\u95f4\u6570\u503c\u65f6\uff0c\u7528\u4e8e\u8bbe\u7f6e\u65e5\u5386\u65f6\u95f4\uff0ctime_t\u662f\u4e00\u4e2along\u7c7b\u578b\n#include <time.h>\n#include <stdio.h>\n#include <dos.h>\nint main()\n{\n    time_t t;\n    t=time(NULL);\n    printf("The number of seconds since January 1,1970 is %ld\\n",t);\n    return 0;\n}\n\n\nctime\uff1a     \u5c06time_t\u503c\u8f6c\u6362\u4e3a\u8868\u793a\u672c\u5730\u65f6\u95f4\u7684\u5b57\u7b26\u4e32\u3002\n// \u51fd\u6570\u539f\u578b: char *ctime(const time_t *tp)\n// \u51fd\u6570\u529f\u80fd: \u5f97\u5230\u65e5\u5386\u65f6\u95f4\n// \u51fd\u6570\u8fd4\u56de: \u8fd4\u56de\u5b57\u7b26\u4e32\u683c\u5f0f\uff1a\u661f\u671f,\u6708,\u65e5,\u5c0f\u65f6:\u5206:\u79d2,\u5e74\n// \u53c2\u6570\u8bf4\u660e: time-\u8be5\u53c2\u6570\u5e94\u7531\u51fd\u6570time\u83b7\u5f97 \u7b49\u540c\u4e8e astime( localtime(tp) )\n#include <stdio.h>\n#include <time.h>\nint main()\n{\n    time_t t;\n    time(&t);\n    printf("Today\'s date and time: %s",ctime(&t));\n    return 0;\n}\n\ngmttime\uff1a \u5c06time_t\u503c\u8f6c\u6362\u4e3a\u8868\u793aGMT\u65f6\u95f4\u7684\u5b57\u7b26\u4e32\u3002\n\nlocaltime\uff1a\u5c06time_t\u8f6c\u6362\u4e3a\u8868\u793a\u672c\u5730\u65f6\u95f4\u7684strunct tm\u7ed3\u6784\u3002\nstruct tm\n{\n    int tm_sec; /* Seconds: 0-59 (K&R says 0-61?) */\n    int tm_min; /* Minutes: 0-59 */\n    int tm_hour;    /* Hours since midnight: 0-23 */\n    int tm_mday;    /* Day of the month: 1-31 */\n    int tm_mon; /* Months *since* january: 0-11 */\n    int tm_year;    /* Years since 1900 */\n    int tm_wday;    /* Days since Sunday (0-6) */\n    int tm_yday;    /* Days since Jan. 1: 0-365 */\n    int tm_isdst;   /* +1 Daylight Savings Time, 0 No DST,* -1 don\'t know */\n};\n\n#include <time.h>\n#include <stdio.h>\n#include <dos.h>\nint main()\n{\n    time_t timer;\n    struct tm *tblock;\n    timer=time(NULL);\n    tblock=localtime(&timer);\n    printf("Local time is: %s",asctime(tblock));\n    return 0;\n}\n\nmktime\uff1a  \u5c06\u8868\u793a\u672c\u5730\u65f6\u95f4\u7684struct tm\u8f6c\u6362\u4e3atime_t\u3002\n\nasctime\uff1a \u5c06struct tm\u8f6c\u6362\u4e3a\u5b57\u7b26\u4e32\u5f62\u5f0f\u3002\n// \u51fd\u6570\u539f\u578b: char* asctime(struct tm * ptr)\n// \u51fd\u6570\u529f\u80fd: \u5f97\u5230\u673a\u5668\u65f6\u95f4(\u65e5\u671f\u65f6\u95f4\u8f6c\u6362\u4e3aASCII\u7801)\n// \u51fd\u6570\u8fd4\u56de: \u8fd4\u56de\u7684\u65f6\u95f4\u5b57\u7b26\u4e32\u683c\u5f0f\u4e3a\uff1a\u661f\u671f,\u6708,\u65e5,\u5c0f\u65f6\uff1a\u5206\uff1a\u79d2,\u5e74\n// \u53c2\u6570\u8bf4\u660e: \u7ed3\u6784\u6307\u9488ptr\u5e94\u901a\u8fc7\u51fd\u6570localtime()\u548cgmtime()\u5f97\u5230\n\ndifftime\uff1a  \u5f97\u5230\u4e24\u4e2a\u65e5\u5386\u65f6\u4e4b\u95f4\u7684\u5dee\u503c\u3002\n// \u51fd\u6570\u539f\u578b: double difftime(time_t time2, time_t time1)\n// \u51fd\u6570\u529f\u80fd: \u5f97\u5230\u4e24\u6b21\u673a\u5668\u65f6\u95f4\u5dee\uff0c\u5355\u4f4d\u4e3a\u79d2\n// \u51fd\u6570\u8fd4\u56de: \u65f6\u95f4\u5dee\uff0c\u5355\u4f4d\u4e3a\u79d2\n// \u53c2\u6570\u8bf4\u660e: time1-\u673a\u5668\u65f6\u95f4\u4e00,time2-\u673a\u5668\u65f6\u95f4\u4e8c.\u8be5\u53c2\u6570\u5e94\u4f7f\u7528time\u51fd\u6570\u83b7\u5f97\n#include <time.h>\n#include <stdio.h>\n#include <dos.h>\n#include <conio.h>\n#include<cmath>\n#include<windows.h>\n\nint main()\n{\n    time_t first, second;\n    system("cls");\n    first = time(NULL);\n    Sleep(1000);\n    second = time(NULL);\n    printf("The difference is: %f seconds", difftime(second, first));\n\n    return 0;\n}\n\n\nstrftime\uff1a  \u81ea\u5b9a\u4e49\u628a\u7ed3\u6784\u4f53tm\u7684\u65e5\u671f\u4e0e\u65f6\u95f4\u4fe1\u606f\u8f6c\u6362\u4e3a\u5236\u5b9a\u7684\u683c\u5f0f\u3002\n')))}u.isMDXComponent=!0}}]);