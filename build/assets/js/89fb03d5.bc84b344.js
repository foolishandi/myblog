"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[729],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>h});var r=n(67294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var c=r.createContext({}),l=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},u=function(e){var t=l(e.components);return r.createElement(c.Provider,{value:t},e.children)},p="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,c=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),p=l(n),d=o,h=p["".concat(c,".").concat(d)]||p[d]||m[d]||a;return n?r.createElement(h,s(s({ref:t},u),{},{components:n})):r.createElement(h,s({ref:t},u))}));function h(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,s=new Array(a);s[0]=d;var i={};for(var c in t)hasOwnProperty.call(t,c)&&(i[c]=t[c]);i.originalType=e,i[p]="string"==typeof e?e:o,s[1]=i;for(var l=2;l<a;l++)s[l]=n[l];return r.createElement.apply(null,s)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},95539:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>s,default:()=>p,frontMatter:()=>a,metadata:()=>i,toc:()=>l});var r=n(87462),o=(n(67294),n(3905));const a={sidebar_position:1},s=void 0,i={unversionedId:"intro/npm/\u72b6\u6001\u7ba1\u7406",id:"intro/npm/\u72b6\u6001\u7ba1\u7406",title:"\u72b6\u6001\u7ba1\u7406",description:"1.jotai",source:"@site/docs/intro/npm/\u72b6\u6001\u7ba1\u7406.md",sourceDirName:"intro/npm",slug:"/intro/npm/\u72b6\u6001\u7ba1\u7406",permalink:"/docs/intro/npm/\u72b6\u6001\u7ba1\u7406",draft:!1,editUrl:"https://github.com/foolishandi/myblog/tree/main/docs/intro/npm/\u72b6\u6001\u7ba1\u7406.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"\u811a\u624b\u67b6",permalink:"/docs/intro/npm/\u811a\u624b\u67b6"},next:{title:"css-in-js",permalink:"/docs/intro/npm/css-in-js"}},c={},l=[{value:"1.jotai",id:"1jotai",level:2},{value:"2.Redux Toolkit",id:"2redux-toolkit",level:2},{value:"3.mobx",id:"3mobx",level:2},{value:"4.vuex",id:"4vuex",level:2},{value:"5.pinia",id:"5pinia",level:2},{value:"6.xstate",id:"6xstate",level:2}],u={toc:l};function p(e){let{components:t,...n}=e;return(0,o.kt)("wrapper",(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h2",{id:"1jotai"},"1.",(0,o.kt)("a",{parentName:"h2",href:"https://jotai.org/"},"jotai")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},'import { atom, useAtom } from "jotai";\n\n// Create your atoms and derivatives\nconst textAtom = atom("hello");\nconst uppercaseAtom = atom((get) => get(textAtom).toUpperCase());\n\n// Use them anywhere in your app\nconst Input = () => {\n  const [text, setText] = useAtom(textAtom);\n  const handleChange = (e) => setText(e.target.value);\n  return <input value={text} onChange={handleChange} />;\n};\n\nconst Uppercase = () => {\n  const [uppercase] = useAtom(uppercaseAtom);\n  return <div>Uppercase: {uppercase}</div>;\n};\n\n// Now you have the components\nconst App = () => {\n  return (\n    <>\n      <Input />\n      <Uppercase />\n    </>\n  );\n};\n')),(0,o.kt)("h2",{id:"2redux-toolkit"},"2.",(0,o.kt)("a",{parentName:"h2",href:"https://redux-toolkit.js.org/tutorials/quick-start"},"Redux Toolkit")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js",metastring:"title='counterSlice.js'",title:"'counterSlice.js'"},'import { createSlice } from "@reduxjs/toolkit";\n\nexport const counterSlice = createSlice({\n  name: "counter",\n  initialState: {\n    value: 0,\n  },\n  reducers: {\n    increment: (state) => {\n      // Redux Toolkit allows us to write "mutating" logic in reducers. It\n      // doesn\'t actually mutate the state because it uses the immer library,\n      // which detects changes to a "draft state" and produces a brand new\n      // immutable state based off those changes\n      state.value += 1;\n    },\n    decrement: (state) => {\n      state.value -= 1;\n    },\n    incrementByAmount: (state, action) => {\n      state.value += action.payload;\n    },\n  },\n});\n\nexport const { increment, decrement, incrementByAmount } = counterSlice.actions;\n\n// The function below is called a thunk and allows us to perform async logic. It\n// can be dispatched like a regular action: `dispatch(incrementAsync(10))`. This\n// will call the thunk with the `dispatch` function as the first argument. Async\n// code can then be executed and other actions can be dispatched\nexport const incrementAsync = (amount) => (dispatch) => {\n  setTimeout(() => {\n    dispatch(incrementByAmount(amount));\n  }, 1000);\n};\n\n// The function below is called a selector and allows us to select a value from\n// the state. Selectors can also be defined inline where they\'re used instead of\n// in the slice file. For example: `useSelector((state) => state.counter.value)`\nexport const selectCount = (state) => state.counter.value;\n\nexport default counterSlice.reducer;\n')),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js",metastring:"title='store'",title:"'store'"},'import { configureStore } from "@reduxjs/toolkit";\nimport counterReducer from "../features/counter/counterSlice";\n\nexport default configureStore({\n  reducer: {\n    counter: counterReducer,\n  },\n});\n')),(0,o.kt)("h2",{id:"3mobx"},"3.",(0,o.kt)("a",{parentName:"h2",href:"https://mobx.js.org/README.html"},"mobx")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},'import React from "react";\nimport ReactDOM from "react-dom";\nimport { makeAutoObservable } from "mobx";\nimport { observer } from "mobx-react";\n\n// Model the application state.\nclass Timer {\n  secondsPassed = 0;\n\n  constructor() {\n    makeAutoObservable(this);\n  }\n\n  increase() {\n    this.secondsPassed += 1;\n  }\n\n  reset() {\n    this.secondsPassed = 0;\n  }\n}\n\nconst myTimer = new Timer();\n\n// Build a "user interface" that uses the observable state.\nconst TimerView = observer(({ timer }) => (\n  <button onClick={() => timer.reset()}>\n    Seconds passed: {timer.secondsPassed}\n  </button>\n));\n\nReactDOM.render(<TimerView timer={myTimer} />, document.body);\n\n// Update the \'Seconds passed: X\' text every second.\nsetInterval(() => {\n  myTimer.increase();\n}, 1000);\n')),(0,o.kt)("h2",{id:"4vuex"},"4.",(0,o.kt)("a",{parentName:"h2",href:"https://vuex.vuejs.org/zh/index.html"},"vuex")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},'import Vue from "vue";\nimport Vuex from "vuex";\n\nVue.use(Vuex);\n\nexport default new Vuex.Store({\n  //\u6570\u636e\uff0c\u76f8\u5f53\u4e8edata\n  state: {},\n  getters: {},\n  //\u91cc\u9762\u5b9a\u4e49\u65b9\u6cd5\uff0c\u64cd\u4f5cstate\u65b9\u53d1\n  mutations: {},\n  // \u64cd\u4f5c\u5f02\u6b65\u64cd\u4f5cmutation\n  actions: {},\n  modules: {},\n});\n')),(0,o.kt)("h2",{id:"5pinia"},"5.",(0,o.kt)("a",{parentName:"h2",href:"https://pinia.web3doc.top/core-concepts/#%E4%BD%BF%E7%94%A8-store"},"pinia")),(0,o.kt)("h2",{id:"6xstate"},"6.",(0,o.kt)("a",{parentName:"h2",href:"https://xstate.js.org/"},"xstate")))}p.isMDXComponent=!0}}]);