"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[324],{3905:(n,e,t)=>{t.d(e,{Zo:()=>u,kt:()=>f});var r=t(67294);function i(n,e,t){return e in n?Object.defineProperty(n,e,{value:t,enumerable:!0,configurable:!0,writable:!0}):n[e]=t,n}function c(n,e){var t=Object.keys(n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(n);e&&(r=r.filter((function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable}))),t.push.apply(t,r)}return t}function a(n){for(var e=1;e<arguments.length;e++){var t=null!=arguments[e]?arguments[e]:{};e%2?c(Object(t),!0).forEach((function(e){i(n,e,t[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(t)):c(Object(t)).forEach((function(e){Object.defineProperty(n,e,Object.getOwnPropertyDescriptor(t,e))}))}return n}function o(n,e){if(null==n)return{};var t,r,i=function(n,e){if(null==n)return{};var t,r,i={},c=Object.keys(n);for(r=0;r<c.length;r++)t=c[r],e.indexOf(t)>=0||(i[t]=n[t]);return i}(n,e);if(Object.getOwnPropertySymbols){var c=Object.getOwnPropertySymbols(n);for(r=0;r<c.length;r++)t=c[r],e.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(n,t)&&(i[t]=n[t])}return i}var s=r.createContext({}),l=function(n){var e=r.useContext(s),t=e;return n&&(t="function"==typeof n?n(e):a(a({},e),n)),t},u=function(n){var e=l(n.components);return r.createElement(s.Provider,{value:e},n.children)},d="mdxType",m={inlineCode:"code",wrapper:function(n){var e=n.children;return r.createElement(r.Fragment,{},e)}},p=r.forwardRef((function(n,e){var t=n.components,i=n.mdxType,c=n.originalType,s=n.parentName,u=o(n,["components","mdxType","originalType","parentName"]),d=l(t),p=i,f=d["".concat(s,".").concat(p)]||d[p]||m[p]||c;return t?r.createElement(f,a(a({ref:e},u),{},{components:t})):r.createElement(f,a({ref:e},u))}));function f(n,e){var t=arguments,i=e&&e.mdxType;if("string"==typeof n||i){var c=t.length,a=new Array(c);a[0]=p;var o={};for(var s in e)hasOwnProperty.call(e,s)&&(o[s]=e[s]);o.originalType=n,o[d]="string"==typeof n?n:i,a[1]=o;for(var l=2;l<c;l++)a[l]=t[l];return r.createElement.apply(null,a)}return r.createElement.apply(null,t)}p.displayName="MDXCreateElement"},82903:(n,e,t)=>{t.r(e),t.d(e,{assets:()=>s,contentTitle:()=>a,default:()=>d,frontMatter:()=>c,metadata:()=>o,toc:()=>l});var r=t(87462),i=(t(67294),t(3905));const c={},a=void 0,o={unversionedId:"\u670d\u52a1\u5668\u7aef/c++/c++/\u6570\u5b57\u76f8\u5173",id:"\u670d\u52a1\u5668\u7aef/c++/c++/\u6570\u5b57\u76f8\u5173",title:"\u6570\u5b57\u76f8\u5173",description:"math.h",source:"@site/docs/\u670d\u52a1\u5668\u7aef/c++/c++/\u6570\u5b57\u76f8\u5173.md",sourceDirName:"\u670d\u52a1\u5668\u7aef/c++/c++",slug:"/\u670d\u52a1\u5668\u7aef/c++/c++/\u6570\u5b57\u76f8\u5173",permalink:"/docs/\u670d\u52a1\u5668\u7aef/c++/c++/\u6570\u5b57\u76f8\u5173",draft:!1,editUrl:"https://github.com/foolishandi/myblog/tree/main/docs/\u670d\u52a1\u5668\u7aef/c++/c++/\u6570\u5b57\u76f8\u5173.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"\u57fa\u7840",permalink:"/docs/\u670d\u52a1\u5668\u7aef/c++/c++/\u5b57\u7b26\u4e32\u5904\u7406/\u57fa\u7840"},next:{title:"\u57fa\u7840",permalink:"/docs/\u670d\u52a1\u5668\u7aef/c++/c++/\u6570\u7ec4/\u57fa\u7840"}},s={},l=[{value:"math.h",id:"mathh",level:2},{value:"\u8fd1\u4f3c\u503c\u6574\u6570",id:"\u8fd1\u4f3c\u503c\u6574\u6570",level:2},{value:"16 \u8fdb\u5236\u8f6c\u6362\u6210 10 \u8fdb\u5236",id:"16-\u8fdb\u5236\u8f6c\u6362\u6210-10-\u8fdb\u5236",level:2},{value:"\u8fdb\u5236\u8f6c\u6362",id:"\u8fdb\u5236\u8f6c\u6362",level:2}],u={toc:l};function d(n){let{components:e,...t}=n;return(0,i.kt)("wrapper",(0,r.Z)({},u,t,{components:e,mdxType:"MDXLayout"}),(0,i.kt)("h2",{id:"mathh"},"math.h"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-c++"},'// 1.\u6d6e\u70b9\u6570\u7684\u53d6\u6574\u548c\u53d6\u5c0f\n// \u6709modff modfl\n// \u82e5a\u4e3a\u6d6e\u70b9\u6570 b\u4e3a\u6574\u6570 c\u4e3a\u5c0f\u4e8e1\u7684\u6d6e\u70b9\u6570 a=b+c\n// \u90a3\u4e48 \u6709c=modf\uff08a\uff0c&b\uff09\uff1b\ndouble c;\ndouble b;\ndouble a = 1.2345;\nc = modf(a, &b);\nprintf("%lf %lf\\n", b, c);\n\n// 1.000000 0.234500\n\n// 2.\u56db\u820d\u4e94\u5165\nround(a)\n\n// 3.\u6d6e\u70b9\u6570\u780d\u53bb\u5c0f\u6570\u90e8\u5206\uff08trunc\uff09\ntrunc(a)\n\n// 4.\u5411\u4e0a\u53d6\u6574\uff08ceil\uff09\nceil(a)\n\n// 5.\u5411\u4e0b\u53d6\u6574\uff08floor\uff09\nfloor(a)\n\n// 6.x\u7684y\u6b21\u65b9pow\u51fd\u6570\npow(2, 2)\n\n// 7.\u5e73\u65b9\u6839sqrt\nsqrt(5)\n\n// 8.\u7edd\u5bf9\u503c\nfabs(-3)\n\n// 9.\u4e24\u6570\u53d6\u5927\u5c0f fmax fmin\n\ndouble a = fmax(1.1, 2.2);\nfloat b = fmaxf(1.1, 2.2);\nlong double c = fmaxl(1.2, 2.2);\ndouble a1 = fmin(1.1, 2.2);\nfloat b1 = fminf(1.1, 2.2);\n')),(0,i.kt)("h2",{id:"\u8fd1\u4f3c\u503c\u6574\u6570"},"\u8fd1\u4f3c\u503c\u6574\u6570"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-c++"},"// \u5229\u7528\u6d6e\u70b9\u7c7b\u578b\u8f6c\u6362\u4e3aint\u7c7b\u578b\u4f1a\u4e22\u5931\u7cbe\u5ea6\uff0c\u4f1a\u820d\u5f03\u5c0f\u6570\u70b9\u4e4b\u540e\u7684\u6570\u6027\u8d28\ndouble input=1.235;\nint output = (int)(input + 0.5);\n")),(0,i.kt)("h2",{id:"16-\u8fdb\u5236\u8f6c\u6362\u6210-10-\u8fdb\u5236"},"16 \u8fdb\u5236\u8f6c\u6362\u6210 10 \u8fdb\u5236"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-c++"},'#include <iostream>\n#include <string>\nusing namespace std;\n\nint main()\n{\n    string input;\n    cin >> input;\n    auto result = stoi(input, nullptr, 16);\n    cout << result << endl;\n\n    // string str;\n    // while(cin>>str)\n    // {\n    //     int ret=0;\n    //     string str1="123456789ABCDEF";\n    //     for(int i=0;i<str.size();i++)\n    //     {\n    //         int pos=str1.find(str[i]);\n    //         //\u9700\u8981\u52a01\n    //         ret=ret*16+(pos+1);\n    //     }\n    //     cout<<ret;\n    // }\n    return 0;\n}\n')),(0,i.kt)("h2",{id:"\u8fdb\u5236\u8f6c\u6362"},"\u8fdb\u5236\u8f6c\u6362"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-c++"},'/*\n    Project: \u8fdb\u5236\u8f6c\u6362\uff08Radix\uff09\n    Date:    2019/02/24\n    Author:  Frank Yu\n    \u57fa\u672c\u64cd\u4f5c\u51fd\u6570\uff1a\n    Atoi(string &S, int R) \u4efb\u610f\u8fdb\u5236\u8f6c\u5341\u8fdb\u5236(All Radix to Int) \u53c2\u6570\uff1a\u4efb\u610f\u8fdb\u5236\u5b57\u7b26\u4e32 \u8fdb\u5236R \u4f5c\u7528\uff1a\u5229\u7528\u6309\u6743\u5c55\u5f00\u52a0\u548c\uff0c\u8fd4\u56de\u5341\u8fdb\u5236\n    Itoa(int Num,int R) \u5341\u8fdb\u5236\u8f6c\u4efb\u610f\u8fdb\u5236\uff08Int to All Radix\uff09\u53c2\u6570\uff1a\u5341\u8fdb\u5236\u6570Num,\u8fdb\u5236R \u4f5c\u7528\uff1a\u5229\u7528\u9664\u7559\u4f59\u6570\u6cd5\uff0c\u8fd4\u56de\u9006\u5e8f\u7684\u4f59\u6570\uff0c\u5373\u8fd4\u56de\u6240\u8981\u8f6c\u6362\u7684\u8fdb\u5236\u6570\n    \u529f\u80fd\u5b9e\u73b0\u51fd\u6570\uff1a\n    ToAll() \u5341\u8fdb\u5236\u8f6c\u4efb\u610f\u8fdb\u5236 \u8c03\u7528\u51fd\u6570Itoa\n    ToDecimal(string &S) \u4efb\u610f\u8fdb\u5236\u8f6c\u5341\u8fdb\u5236\u51fd\u6570 \u8c03\u7528Atoi\u51fd\u6570\uff0cstrtol\u51fd\u6570\n    ZhiDing() \u4f5c\u7528\uff1a\u5229\u7528std\u7684hex dec \u4ee5\u53ca bitset\uff0cc\u8bed\u8a00\u7684%o,%x\n    Stream() \u4f5c\u7528\uff1a\u5229\u7528sstream\u5934\u6587\u4ef6\u5c06\u6570\u6309\u67d0\u8fdb\u5236\u8bfb\u5165\u6d41\uff0c\u8f93\u51fa\u6d41\n*/\n#include<cstdio>\n#include<cstdlib>\n#include<cstring>\n#include<cmath>\n#include<string>\n#include<set>\n#include<list>\n#include<vector>\n#include<map>\n#include<iterator>\n#include<algorithm>\n#include<bitset>\n#include<sstream>\n#include<iostream>\nusing namespace std;\n#define Max 100\n//\u8fdb\u5236\u6743\u503c\nint power(int R,int turn)\n{\n    int ans = 1;\n    while (turn--)\n    {\n        ans = ans*R;\n    }\n    return ans;\n}\n//**************************************\u57fa\u672c\u64cd\u4f5c\u51fd\u6570**********************************//\n//\u4efb\u610f\u8fdb\u5236\u8f6c\u5341\u8fdb\u5236(All Radix to Int) \u53c2\u6570\uff1a\u4efb\u610f\u8fdb\u5236\u5b57\u7b26\u4e32 \u8fdb\u5236R \u4f5c\u7528\uff1a\u5229\u7528\u6309\u6743\u5c55\u5f00\u52a0\u548c\uff0c\u8fd4\u56de\u5341\u8fdb\u5236\nlong int Atoi(string &S, int R)\n{\n    long int ans = 0;\n    for (int i=0;i < S.size();i++)//\u6309\u6743\u5c55\u5f00\n    {\n        ans += (S[i] - \'0\') * power(R, S.size() - i - 1);\n    }\n    /* \u7f51\u4e0a\u4ee3\u7801 \u4e0d\u7406\u89e3\uff08\u5df2\u4e86\u89e3\uff0c\u4e3e\u4f8b\uff0c\u5341\u516d\u8fdb\u5236\u65f6t\u53ef\u80fd\u4e3af\uff0c\u90a3\u4e48f-\'a\'=5,\u518d\u52a010\u5c31\u662f15\u4e86\uff09\n    int ans=0;\n    for (int i = 0;i<s.size();i++)\n    {\n        char t = s[i];\n        if (t >= \'0\'&&t <= \'9\') ans = ans*radix + t - \'0\';\n        else ans = ans*radix + t - \'a\' + 10;\n    }*/\n    return ans;\n}\n//\u5341\u8fdb\u5236\u8f6c\u4efb\u610f\u8fdb\u5236\uff08Int to All Radix\uff09\u53c2\u6570\uff1a\u5341\u8fdb\u5236\u6570Num,\u8fdb\u5236R \u4f5c\u7528\uff1a\u5229\u7528\u9664\u7559\u4f59\u6570\u6cd5\uff0c\u8fd4\u56de\u9006\u5e8f\u7684\u4f59\u6570\uff0c\u5373\u8fd4\u56de\u6240\u8981\u8f6c\u6362\u7684\u8fdb\u5236\u6570\nstring Itoa(int Num,int R)\n{\n  string remain="";\n  int temp;\n  do {\n   temp = Num%R;//\u53d6\u4f59\n   Num /= R;\n   if (temp >= 10)\n       remain += temp - 10 + \'A\';//\u4efb\u610f\u8fdb\u5236\u4e3a\u5927\u4e8e\u57fa\u6570\u5927\u4e8e10\u7684\u8fdb\u5236 \u4f8b\u5982\uff0c\u5341\u516d\u8fdb\u5236\n   else remain += temp + \'0\';\n  } while (Num);\n  reverse(remain.begin(),remain.end());//\u9006\u5e8f\n  return remain;\n}\n//**************************************\u529f\u80fd\u5b9e\u73b0\u51fd\u6570**********************************//\n//\u83dc\u5355\nvoid menu()\n{\n    cout << "************1.\u5341\u8fdb\u5236\u8f6c\u4efb\u610f\u8fdb\u5236\uff08\u9664\u7559\u4f59\u6570\uff09       2.\u4efb\u610f\u8fdb\u5236\u8f6c\u4e3a\u5341\u8fdb\u5236\uff08\u6309\u6743\u5c55\u5f00\uff09****" << endl;\n    cout << "************3.\u5341\u8fdb\u5236\u6307\u5b9a\u683c\u5f0f\u8f93\u51fa\uff08\u4e8c\u3001\u516b\u3001\u5341\u516d)  4.\u5229\u7528\u6d41****************************" << endl;\n    cout << "************5.\u9000\u51fa" << endl;\n}\nvoid menu1()\n{\n    cout << "************1.\u5341\u8fdb\u5236\u8f6c\u4e8c\u8fdb\u5236         2.\u5341\u8fdb\u5236\u8f6c\u516b\u8fdb\u5236****" << endl;\n    cout << "************3.\u5341\u8fdb\u5236\u8f6c\u5341\u516d\u8fdb\u5236       4.\u9000\u51fa**************" << endl;\n}\nvoid menu2()\n{\n    cout << "************1.\u5341\u8fdb\u5236\u8f6c\u516b\u8fdb\u5236         2.\u5341\u8fdb\u5236\u8f6c\u5341\u516d\u8fdb\u5236**************" << endl;\n    cout << "************3.\u516b\u8fdb\u5236\u8f6c\u5341\u8fdb\u5236         4.\u5341\u516d\u8fdb\u5236\u8f6c\u5341\u8fdb\u5236**************" << endl;\n    cout << "************5.\u9000\u51fa" << endl;\n}\n//\u5341\u8fdb\u5236\u8f6c\u4efb\u610f\u8fdb\u5236 \u8c03\u7528\u51fd\u6570Itoa,\u81ea\u5e26\u7684itoa\nvoid ToAll()\n{\n    int num, R;char str[Max];\n    cout << "\u8bf7\u8f93\u5165\u6570\u548c\u8fdb\u5236:" << endl;\n    cin >> num >> R;\n    cout << num << "\u8f6c\u6362\u4e3a"<<R<<"\u8fdb\u5236\u4e3a\uff1a" << Itoa(num,R) << endl;\n    cout << "\u5229\u7528itoa\u51fd\u6570:" <<itoa(num,str,R)<<endl;\n}\n//\u4efb\u610f\u8fdb\u5236\u8f6c\u5341\u8fdb\u5236\u51fd\u6570 \u8c03\u7528Atoi\u51fd\u6570\uff0cstrtol\u51fd\u6570\nvoid ToDecimal(string &S)\n{\n    int R;\n    cout << "\u8bf7\u8f93\u5165\u6570\u548c\u8fdb\u5236:" << endl;\n    cin >>S>>R;\n    cout <<S<<"\u8f6c\u6362\u4e3a\u5341\u8fdb\u5236\u4e3a\uff1a"<<Atoi(S, R)<<endl;\n    //\u5229\u7528strtol\u51fd\u6570 long int strtol(const char *nptr,char **endptr,int base)\n    //\u53c2\u6570\uff0c\u5b57\u7b26\u4e32,\u975e\u6cd5\u5b57\u7b26\u6307\u9488\uff0c\u5b57\u7b26\u4e32\u4e2d\u7684\u8fdb\u5236\n    char nptr[Max],*stop;\n    strcpy(nptr,S.c_str());//string\u7c7b\u578b\u8f6c\u6362\u4e3achar\n    cout<<S << "\u8f6c\u6362\u4e3a\u5341\u8fdb\u5236\u4e3a\uff08\u5229\u7528strtol\u51fd\u6570\uff09\uff1a" << strtol(nptr,&stop,R) << endl;\n}\n//\u4f5c\u7528\uff1a\u5229\u7528std\u7684hex dec \u4ee5\u53ca bitset\uff0cc\u8bed\u8a00\u7684%o,%x\nvoid ZhiDing()\n{\n    int num;int choice = 0;\n     cout << "\u8bf7\u8f93\u5165\u5341\u8fdb\u5236\u6570:" << endl;\n     cin >> num;\n    while (1)\n    {\n        menu1();\n        printf("\u8bf7\u8f93\u5165\u83dc\u5355\u5e8f\u53f7\uff1a\\n");\n        scanf("%d", &choice);\n        if (4 == choice) break;\n        switch (choice)\n        {\n        case 1:cout << num <<"\u8f6c\u4e3a\u4e8c\u8fdb\u5236\uff08\u5229\u7528bitset\uff09:"<<bitset<8>(num)<<endl;break;\n        case 2: {\n                  cout << num << "\u8f6c\u4e3a\u516b\u8fdb\u5236\uff08\u5229\u7528oct\uff09:" << oct << num << endl;\n                  printf("\u8f6c\u4e3a\u516b\u8fdb\u5236\uff08\u5229\u7528o\uff09:%o\\n",num);//8\u4f4d\uff0c\u9ad8\u4f4d\u88650\n                 }break;\n        case 3: {\n                   cout << num << "\u8f6c\u4e3a\u5341\u516d\u8fdb\u5236:" << hex << num << endl;\n                   printf("\u8f6c\u4e3a\u5341\u516d\u8fdb\u5236\uff08\u5229\u7528x\uff09:%x\\n", num);\n                }break;\n        default:printf("\u8f93\u5165\u9519\u8bef\uff01\uff01\uff01\\n");break;\n        }\n    }\n}\n//\u4f5c\u7528\uff1a\u5229\u7528sstream\u5934\u6587\u4ef6\u5c06\u6570\u6309\u67d0\u8fdb\u5236\u8bfb\u5165\u6d41\uff0c\u8f93\u51fa\u6d41\nvoid Stream()\n{\n    string s;int choice = 0;\n    stringstream ss;int num;\n    while (1)\n    {\n        menu2();\n        printf("\u8bf7\u8f93\u5165\u83dc\u5355\u5e8f\u53f7\uff1a\\n");\n        scanf("%d", &choice);\n        if (5 == choice) break;\n        switch (choice)\n        {\n        case 1: {\n            cout << "\u8bf7\u8f93\u5165\u4e00\u4e2a\u6570\uff1a" << endl;\n            cin >> num;\n            ss.clear();//\u6e05\u7a7a\u4e00\u4e0b\uff0c\u9632\u6b62\u51fa\u9519\n            ss << oct << num;//\u5341\u8fdb\u5236\u8f6c\u4e3a\u516b\u8fdb\u5236\u8bfb\u5165\u6d41\u4e2d\n            ss >> s;//\u8f6c\u6362\u7684\u516b\u8fdb\u5236\u6570\u653e\u5165\u5b57\u7b26\u4e32s\u4e2d\n            cout << num << "\u8f6c\u4e3a\u516b\u8fdb\u5236\uff08\u5229\u7528\u6d41\uff09:" << s << endl;\n        }break;\n        case 2: {\n            cout << "\u8bf7\u8f93\u5165\u4e00\u4e2a\u6570\uff1a" << endl;\n            cin >> num;\n            ss.clear();//\u6e05\u7a7a\u4e00\u4e0b\uff0c\u9632\u6b62\u51fa\u9519\n            ss << hex << num;//\u5341\u8fdb\u5236\u8f6c\u4e3a\u5341\u516d\u8fdb\u5236\u8bfb\u5165\u6d41\u4e2d\n            ss >> s;//\u8f6c\u6362\u7684\u5341\u516d\u8fdb\u5236\u6570\u653e\u5165\u5b57\u7b26\u4e32s\u4e2d\n            cout << num << "\u8f6c\u4e3a\u5341\u516d\u8fdb\u5236\uff08\u5229\u7528\u6d41\uff09:" << s << endl;\n        }break;\n        case 3: {\n            cout << "\u8bf7\u8f93\u5165\u4e00\u4e2a\u6570\uff1a" << endl;\n            cin >> s;\n            ss.clear();//\u6e05\u7a7a\u4e00\u4e0b\uff0c\u9632\u6b62\u51fa\u9519\n            ss << oct << s;//\u5c06s\u4ee5\u516b\u8fdb\u5236\u5f62\u5f0f\u8bfb\u5165\u6d41\u4e2d\n            ss >> num;//\u4ee5\u5341\u8fdb\u5236\u8f93\u5165\u5230num\u4e2d\n            cout << s << "\u8f6c\u4e3a\u5341\u8fdb\u5236\uff08\u5229\u7528\u6d41\uff09:" << num << endl;\n        }break;\n        case 4: {\n            cout << "\u8bf7\u8f93\u5165\u4e00\u4e2a\u6570\uff1a" << endl;\n            cin >> s;\n            ss.clear();//\u6e05\u7a7a\u4e00\u4e0b\uff0c\u9632\u6b62\u51fa\u9519\n            ss << hex << s;//\u5c06s\u4ee5\u516b\u8fdb\u5236\u5f62\u5f0f\u8bfb\u5165\u6d41\u4e2d\n            ss >> num;//\u4ee5\u5341\u8fdb\u5236\u8f93\u5165\u5230num\u4e2d\n            cout << s << "\u8f6c\u4e3a\u5341\u8fdb\u5236\uff08\u5229\u7528\u6d41\uff09:" << num << endl;\n        }break;\n        default:printf("\u8f93\u5165\u9519\u8bef\uff01\uff01\uff01\\n");break;\n        }\n    }\n}\n//\u4e3b\u51fd\u6570\nint main()\n{\n    int choice = 0;\n    string S;\n    while (1)\n    {\n        menu();\n        printf("\u8bf7\u8f93\u5165\u83dc\u5355\u5e8f\u53f7\uff1a\\n");\n        scanf("%d", &choice);\n        if (5 == choice) break;\n        switch (choice)\n        {\n        case 1:ToAll();break;\n        case 2:ToDecimal(S);break;\n        case 3:ZhiDing();break;\n        case 4:Stream();break;\n        default:printf("\u8f93\u5165\u9519\u8bef\uff01\uff01\uff01\\n");break;\n        }\n    }\n    return 0;\n}\n\n')))}d.isMDXComponent=!0}}]);